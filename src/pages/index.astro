---
import { getEntry, getCollection, render } from 'astro:content';
import BaseLayout from '@/layouts/BaseLayout.astro';
import Container from '@/components/Container.astro';
import Author from '@/components/ui/Author.astro';
import { DEFAULT_CONFIGURATION } from '@/lib/constants';
import WorkExperience from '@/components/ui/WorkExperience.astro';
import Talk from '@/components/ui/Talk.astro';
import { sortJobsByDate } from '@/lib/utils';

const entry = await getEntry('pages', 'homepage');

if (!entry) {
  throw new Error('Homepage entry not found');
}

const { Content } = await render(entry);

const links = await getCollection('links');
const jobs = await getCollection('jobs');
const sortedJobs = sortJobsByDate(jobs);
const talks = await getCollection('talks');

const emailLink = links.find((l) => l.data.url.startsWith('mailto:'));
const socialLinks = links.filter((l) => !l.data.url.startsWith('mailto:'));
---

<BaseLayout seo={entry.data.seo}>
  <Container as="section" class="pt-6 pb-2 max-w-[56rem]">
    <div class="relative">
      <div class="pointer-events-none absolute inset-x-8 -top-10 h-40 rounded-full bg-gradient-to-r from-primary/20 to-transparent blur-2xl"></div>
      <div class="bg-card border border-border rounded-2xl p-6 shadow-sm relative">
      <Author {...DEFAULT_CONFIGURATION.author} />

      <div class="mt-5 flex flex-wrap gap-3">
        <a href="/resume" class="inline-flex items-center gap-2 rounded-md px-4 py-2 border border-border bg-foreground text-background transition-colors hover:opacity-90">
          View Resume
        </a>
        <a href="/projects" class="inline-flex items-center gap-2 rounded-md px-4 py-2 border border-border bg-muted-foreground/30 text-headings transition-colors hover:bg-muted-foreground/40">
          View Projects
        </a>
        {emailLink && (
          <a href={emailLink.data.url} class="inline-flex items-center gap-2 rounded-md px-4 py-2 border border-border text-headings transition-colors hover:bg-muted-foreground/20">
            Email Me
          </a>
        )}
      </div>

      {socialLinks.length > 0 && (
        <div class="mt-5 flex items-center gap-3">
          {socialLinks.map((link) => {
            const label = link.data.label.toLowerCase();
            const iconSrc = label.includes('github')
              ? '/icons/github.svg'
              : label.includes('linkedin')
              ? '/icons/linkedin.svg'
              : '/icons/link.svg';
            return (
              <a
                href={link.data.url}
                rel="noopener noreferrer"
                target="_blank"
                class="group inline-flex items-center justify-center w-10 h-10 rounded-full border border-border bg-card/60 hover:bg-muted-foreground/20 transition-[background,transform] hover:-translate-y-0.5"
                aria-label={link.data.label}
              >
                <img src={iconSrc} alt="" class="w-4 h-4 opacity-90 group-hover:opacity-100" loading="lazy" />
              </a>
            );
          })}
        </div>
      )}
      </div>
    </div>
  </Container>

  <Container as="section" class="py-6 max-w-[56rem]">
    <div class="bg-card border border-border rounded-2xl p-6">
      <h2 class="text-xl font-semibold text-headings mb-3">About</h2>
      <div class="prose dark:prose-invert max-w-none">
        <Content />
      </div>
    </div>
  </Container>
  {links.length > 0 && (
    <Container as="section" class="py-8 max-w-[56rem]">
      <div class="flex flex-col gap-5 bg-card border border-border rounded-2xl p-6">
        <h2 class="text-xl font-semibold text-headings">Contact</h2>
        <ul class="flex flex-col gap-3">
          {links.map((link) => {
            const href = link.data.url;
            const label = link.data.label.toLowerCase();
            const isEmail = href.startsWith('mailto:');
            const displayUrl = isEmail ? link.data.name : href;
            const iconSrc = label.includes('github')
              ? '/icons/github.svg'
              : label.includes('linkedin')
              ? '/icons/linkedin.svg'
              : isEmail
              ? '/icons/mail.svg'
              : '/icons/link.svg';

            return (
              <li class="py-0.5">
                <a class="group flex items-center gap-4" rel="noopener noreferrer" target={isEmail ? undefined : '_blank'} href={href}>
                  <span class="flex items-center justify-center w-9 h-9 rounded-md border border-border bg-card/50 group-hover:bg-muted-foreground/20 transition-colors">
                    <img src={iconSrc} alt={`${link.data.label} icon`} class="w-4 h-4" loading="lazy" />
                  </span>
                  <div class="flex flex-col">
                    <span class="text-headings font-medium leading-tight">{link.data.label}</span>
                    <span class="text-muted-foreground text-sm leading-tight truncate max-w-[60ch]">{displayUrl}</span>
                  </div>
                </a>
              </li>
            );
          })}
        </ul>
      </div>
    </Container>
  )}
  <Container as="section" class="py-6 max-w-[56rem]">
    <div class="bg-card border border-border rounded-2xl p-6">
      <h2 class="text-xl font-semibold text-headings mb-3">Work Experience</h2>
      {sortedJobs.length > 0 ? (
        <ul class="flex flex-col gap-6">
          {sortedJobs.map((job) => (
            <WorkExperience entry={job} />
          ))}
        </ul>
      ) : (
        <div class="text-muted-foreground">
          Fresher â€” actively seeking opportunities as a Data Analyst or Junior Data Scientist. Open to internships and full-time roles.
        </div>
      )}
    </div>
  </Container>
  {
    talks.length > 0 && (
      <Container as="section" class="py-6 max-w-[56rem]">
        <div class="bg-card border border-border rounded-2xl p-6">
          <h2 class="text-xl font-semibold text-headings mb-3">Speaking</h2>
          <ul class="flex flex-col gap-6">
            {talks.map((talk) => (
              <Talk entry={talk} />
            ))}
          </ul>
        </div>
      </Container>
    )
  }
</BaseLayout>
